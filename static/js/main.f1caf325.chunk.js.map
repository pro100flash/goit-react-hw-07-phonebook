{"version":3,"sources":["components/ContactForm/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/selectors.js","redux/actions.js","redux/operations.js","components/ContactForm/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","className","S","section","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","changeFilter","axios","defaults","baseURL","ContactForm","useSelector","dispatch","useDispatch","onSubmit","number","contact","actions","post","then","data","catch","error","addContact","useState","setName","setNumber","handleChange","e","target","value","preventDefault","find","chekName","chekNumber","trim","alert","form","label","type","placeholder","onChange","input","button","Contacts","onDeleteContact","id","delete","operations","useEffect","get","map","container","onClick","Filter","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","reducers","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1caf325.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__Uhmke\",\"label\":\"Form_label__1DFHp\",\"input\":\"Form_input__3YF3L\",\"button\":\"Form_button__2ObBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1MVsc\",\"name\":\"Contacts_name__v0lGf\",\"button\":\"Contacts_button__2oqoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3sJCs\"};","import PropTypes from \"prop-types\";\nimport S from \"./Section.module.css\";\nconst Section = ({ title, children }) => (\n  <div className={S.section}>\n    <h2 className={S.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoader = (state) => state.contscts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest \");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\n\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const fetchContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\n\r\nexport const fetchContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\n\r\nexport const fetchContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","import axios from \"axios\";\r\nimport * as actions from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3030\";\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`./contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/selectors\";\nimport { addContact } from \"../../redux/operations\";\nimport S from \"./Form.module.css\";\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const chekName = (name) => {\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const chekNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (chekName(name)) {\n      alert(`${name} is already added.`);\n    } else if (chekNumber(number)) {\n      alert(`${number} is already added.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"All of inputs must be not empty\");\n    } else {\n      onSubmit(name, number);\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={S.form}>\n      <label className={S.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"\"\n          onChange={handleChange}\n          className={S.input}\n        />\n      </label>\n      <label className={S.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"\"\n          onChange={handleChange}\n          className={S.input}\n        />\n      </label>\n\n      {\n        <button type=\"submit\" className={S.button}>\n          Add contact\n        </button>\n      }\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport * as operations from \"../../redux/operations\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport S from \"./Contacts.module.css\";\n\nfunction Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(operations.deleteContact(id));\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={S.container}>\n          <p className={S.name}>\n            {name}: {number}{\" \"}\n          </p>\n          {\n            <button\n              className={S.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Удалить\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as actions from \"../../redux/actions\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\n\n  return (\n    <label>\n      Find contacts by name{\" \"}\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n","import Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: reducers,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}